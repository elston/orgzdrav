# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-02-26 07:57
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.PositiveIntegerField(blank=True, null=True, verbose_name='№')),
                ('name', models.CharField(max_length=128, verbose_name='наименование')),
                ('xurl', models.CharField(blank=True, max_length=128, null=True)),
                ('descr', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name_plural': 'приложения',
                'ordering': ['code'],
                'verbose_name': 'приложение',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fio', models.CharField(max_length=128, verbose_name='ФИО')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('organization', django.contrib.postgres.fields.jsonb.JSONField()),
                ('cardname', django.contrib.postgres.fields.jsonb.JSONField()),
                ('store', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'verbose_name_plural': 'карты',
                'verbose_name': 'карта',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='наименование')),
                ('fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'диагнозы',
                'ordering': ['name'],
                'verbose_name': 'диагноз',
            },
        ),
        migrations.CreateModel(
            name='Fio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fio', models.CharField(max_length=128, unique=True, verbose_name='ФИО')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('fullname', models.TextField(blank=True, null=True, verbose_name='Полное наименование')),
                ('is_perinatalcenter', models.BooleanField(default=False)),
                ('lavelmz', models.PositiveSmallIntegerField(default=1)),
                ('departments', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Организации',
                'ordering': ('name',),
                'verbose_name': 'Организация',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='наименование')),
                ('fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'услуги',
                'ordering': ['name'],
                'verbose_name': 'услуга',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mid_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='отчество')),
                ('is_admin', models.BooleanField(default=False)),
                ('timelineverify', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=3), default=['abs'], size=3)),
                ('organizations', models.ManyToManyField(blank=True, related_name='users', to='orgzdrav.Organization')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='app',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='apps', to='orgzdrav.User'),
        ),
        migrations.AlterUniqueTogether(
            name='app',
            unique_together=set([('name', 'xurl')]),
        ),
    ]
